'****************************************************************************
'
'  File:      SubMain.vb
'
'  Copyright (c) SAP MANAGE
'
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
' ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
' THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
' PARTICULAR PURPOSE.
'
' Debug Command Line Arguments for test
' "C:\Program Files\SAP\SAP Business One\AddOns\MC\UI Menus|C:\Program Files\SAP\SAP Business One\AddOnInstallAPI.dll"
'
'****************************************************************************
Option Strict Off
Option Explicit On 

Imports System.IO
Imports Microsoft.Win32

Module SubMain

  ' Main function called by the addon installer exe
  Public Sub Main()

    Dim strCmdLine As String ' The whole command line
    Dim NumOfParams As Integer 'The number of parameters in the command line (should be 2)
    Dim strCmdLineElements(2) As String
    Dim strAddOnPath As String
    Dim ProcID As Integer

    ' The command line parameter contains 2 parameters seperated by '|' 
    NumOfParams = Environment.GetCommandLineArgs.Length
    If NumOfParams = 2 Then
      strCmdLine = Environment.GetCommandLineArgs.GetValue(1)

      ' Uninstall command
      If (strCmdLine = "/x") Then

        Environment.CurrentDirectory = GetStrAddOnPath()

        ' Run Setup with Uninstall command line
        ProcID = Shell("msiexec /x setup.msi", AppWinStyle.NormalFocus, True)
        ' Remove registry information
        RemoveParametersFromRegistry()
      Else
        ' Save the parameters into a registry
        SaveParametersIntoRegistry(strCmdLine)

        strCmdLineElements = strCmdLine.Split("|")

        '' Get the AddOn Install destination Folder
        strAddOnPath = strCmdLineElements.GetValue(0)

        CopyInstallFilesToAddOnPath(strAddOnPath)

        Environment.CurrentDirectory = strAddOnPath

        ' Run Setup
        ' Set TARGETDIR to the proposed B1 directory
        ProcID = Shell("msiexec /i setup.msi TARGETDIR=""" + strAddOnPath + """", _
            AppWinStyle.NormalFocus, True)
      End If

    Else
      MessageBox.Show("This installer must be run from Sap Business One", _
                      "Incorrect installation", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
    End If
  End Sub

  ' Copy the setup project files to be runned during installation
  Private Sub CopyInstallFilesToAddOnPath(ByVal addOnPath As String)

    Dim AddonExeFile As IO.FileStream
    Dim thisExe As System.Reflection.Assembly
    Dim file As System.IO.Stream
    Dim buffer() As Byte

    'Remove everything inside the directory
    If (IO.Directory.Exists(addOnPath)) Then
      DeleteFiles(addOnPath)
    Else
      ' Create installation folder
      IO.Directory.CreateDirectory(addOnPath)
    End If

    thisExe = System.Reflection.Assembly.GetExecutingAssembly()

    ' EXE
    file = thisExe.GetManifestResourceStream("Installer.setup.exe")

    ' Create a tmp file first, after file is extracted change to exe
    AddonExeFile = IO.File.Create(addOnPath & "\setup.tmp")
    ReDim buffer(file.Length)

    file.Read(buffer, 0, file.Length)
    AddonExeFile.Write(buffer, 0, file.Length)
    AddonExeFile.Close()
    ' Change file extension to exe
    IO.File.Move(addOnPath & "\setup.tmp", addOnPath & "\setup.exe")

    ' MSI
    file = thisExe.GetManifestResourceStream("Installer.setup.msi")

    ' Create a tmp file first, after file is extracted change to exe
    AddonExeFile = IO.File.Create(addOnPath & "\setup.tmp")
    ReDim buffer(file.Length)

    file.Read(buffer, 0, file.Length)
    AddonExeFile.Write(buffer, 0, file.Length)
    AddonExeFile.Close()
    ' Change file extension to exe
    IO.File.Move(addOnPath & "\setup.tmp", addOnPath & "\setup.msi")

    ' No INI file generated by Setup with VS2005
    '' INI
    'file = thisExe.GetManifestResourceStream("Installer.Setup.Ini")

    '' Create a tmp file first, after file is extracted change to exe
    'AddonExeFile = IO.File.Create(addOnPath & "\Setup.tmp")
    'ReDim buffer(file.Length)

    'file.Read(buffer, 0, file.Length)
    'AddonExeFile.Write(buffer, 0, file.Length)
    'AddonExeFile.Close()
    '' Change file extension to exe
    'IO.File.Move(addOnPath & "\Setup.tmp", addOnPath & "\Setup.ini")

  End Sub

  Private Sub SaveParametersIntoRegistry(ByVal strCmdLine As String)

    Dim regParam As RegistryKey
    Dim keyValue As String
    Dim subKeyValue As String

    Dim addOnInstallInfo As AddOnInstaller.AddOnInstallInfo
    addOnInstallInfo = New AddOnInstaller.AddOnInstallInfo

    keyValue = "SOFTWARE\\SAP\\SAP Manage\\SAP Business One\\InstallAddOn\\" _
      + addOnInstallInfo.PartnerName + "\\" + addOnInstallInfo.AddOnName

    regParam = Registry.CurrentUser.OpenSubKey(keyValue, True)
    If regParam Is Nothing Then
      ' Key doesn't exist; create it.
      regParam = Registry.CurrentUser.CreateSubKey(keyValue)
    End If

    If (Not regParam Is Nothing) Then
      ' Command line parameters
      subKeyValue = "Params"
      regParam.SetValue(subKeyValue, strCmdLine)

      ' Restart flag
      Dim restart As String = "N"
      If (addOnInstallInfo.RestartNeeded) Then
        restart = "Y"
      End If

      subKeyValue = "RestartNeeded"
      regParam.SetValue(subKeyValue, restart)

      regParam.Close()
    End If

  End Sub

  ' Remove all installation information saved into registries
  ' Called at the end of uninstallation
  Private Sub RemoveParametersFromRegistry()

    Dim regParam As RegistryKey
    Dim keyValue As String
    Dim subKeyValue As String

    Dim addOnInstallInfo As AddOnInstaller.AddOnInstallInfo
    addOnInstallInfo = New AddOnInstaller.AddOnInstallInfo

    keyValue = "SOFTWARE\\SAP\\SAP Manage\\SAP Business One\\InstallAddOn\\" _
      + addOnInstallInfo.PartnerName '\\InstallAddOn"
    subKeyValue = addOnInstallInfo.AddOnName '"InstallAddOn" '"Params"

    regParam = Registry.CurrentUser.OpenSubKey(keyValue, True)
    If (Not regParam Is Nothing) Then
      regParam.DeleteSubKey(subKeyValue)
      regParam.Close()
    End If

  End Sub

  Private Function GetStrAddOnPath() As String
    Dim strArgs As String
    Dim strCmdLineElements As String()
    Dim addOnPath As String

    strArgs = GetParamsFromRegistry()

    strCmdLineElements = strArgs.Split("|")

    ' Get the "AddOnInstallAPI.dll" path
    addOnPath = strCmdLineElements(0)

    Return addOnPath

  End Function

  Private Function GetParamsFromRegistry() As String

    Dim regParam As RegistryKey
    Dim keyValue As String
    Dim subKeyValue As String
    Dim strParams As String = ""

    Dim addOnInstallInfo As AddOnInstaller.AddOnInstallInfo
    addOnInstallInfo = New AddOnInstaller.AddOnInstallInfo

    keyValue = "SOFTWARE\\SAP\\SAP Manage\\SAP Business One\\InstallAddOn\\" _
      + addOnInstallInfo.PartnerName + "\\" + addOnInstallInfo.AddOnName

    'keyValue = "SOFTWARE\\SAP\\SAP Manage\\SAP Business One\\InstallAddOn"
    subKeyValue = "Params"
    regParam = Registry.CurrentUser.OpenSubKey(keyValue, False)

    If (Not regParam Is Nothing) Then
      strParams = regParam.GetValue(subKeyValue, "")
      regParam.Close()
    End If
    Return strParams

  End Function

  ' Deletes all files inside a directory
  Private Sub DeleteFiles(ByVal path As String)
    Dim strFiles, strDirs As String()
    Dim file, dir As String

    strFiles = IO.Directory.GetFiles(path)

    If (strFiles.Length >= 1) Then
      For Each file In strFiles
        IO.File.Delete(file)
      Next
    End If

    strDirs = IO.Directory.GetDirectories(path)

    If (strDirs.Length >= 1) Then
      For Each dir In strDirs
        IO.Directory.Delete(dir, True)
      Next
    End If

  End Sub

End Module